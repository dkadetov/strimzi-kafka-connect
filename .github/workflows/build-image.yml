
name: Publish Docker image and Helm chart

on:
  push:
    tags:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern=v{{version}}

      - name: Extract metadata for Helm
        id: meta_extra
        shell: bash
        run: |
          strimziImageTag=$(grep 'STRIMZI_VERSION=' Dockerfile | cut -d '=' -f2)
          chartName=$(echo "${{ github.repository }}" | cut -d '/' -f2)

          echo strimzi_tag=$strimziImageTag >> $GITHUB_OUTPUT
          echo chart_name=$chartName >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta_extra.outputs.strimzi_tag }}
            ${{ steps.meta.outputs.tags }}

      - name: Install Helm
        uses: azure/setup-helm@v4.2.0

      - name: Patch Docker image tag
        uses: rkretzschmar/patch-yaml-inside-yaml@v3
        with:
          documentFile: ./helm/${{ steps.meta_extra.outputs.chart_name }}/values.yaml
          yamlPath: deploymentConfig.image.tag
          newValue: ${{ env.DOCKER_METADATA_OUTPUT_VERSION }}

      - name: Publish Helm Chart
        shell: bash
        working-directory: ./helm/${{ steps.meta_extra.outputs.chart_name }}
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login $REPO --username ${{ github.actor }} --password-stdin
          helm lint .
          helm package . --version $TAG
          helm show chart $CHART-$TAG.tgz
          helm push $CHART-$TAG.tgz oci://$REPO
        env:
          CHART: ${{ steps.meta_extra.outputs.chart_name }}
          REPO: ${{ env.REGISTRY }}/${{ github.repository_owner }}
          TAG: ${{ github.ref_name }}
