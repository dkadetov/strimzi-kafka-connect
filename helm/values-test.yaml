---

clusterOperator:
  enabled: true

  replicas: 2

  leaderElection:
    enable: true

strimziConfig:
  bootstrapServers: kafka.shared.svc.cluster.local:9092

  schemaRegistry: http://schema-registry.shared.svc.cluster.local:8081

  loggingConfig:
    loggers:
      connect.root.logger.level: INFO

  tracingConfig:
    enabled: true
    parameters:
      OTEL_EXPORTER_OTLP_AGENT_ENDPOINT_TEMPLATE: http://${K8S_NODE_IP}:4817
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_SERVICE_NAME: '{{ tpl .Values.strimziConfig.connectClusterName . }}-otel'
      OTEL_PROPAGATORS: b3multi
      OTEL_TRACES_EXPORTER: otlp
      OTEL_TRACES_SAMPLER: always_on
      OTEL_METRICS_EXPORTER: none

deploymentConfig:
  replicaCount: 2

  image:
    tag: 0.44.0-kafka-3.8.0-debezium-2.7.4-amd64

  jvmOptions:
    -Xms: 1792M
    -Xmx: 1792M

  resources:
    limits:
      cpu: 1000m
      memory: 2304Mi
    requests:
      cpu: 150m
      memory: 2304Mi

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: 'kubernetes.azure.com/mode'
                operator: NotIn
                values:
                  - system

connectConfig:
  offset.flush.interval.ms: 10000
  key.converter.schemas.enable: true
  value.converter.schemas.enable: true

connectorConfig:
  common:
    config:
      topic.creation.e2e.replication.factor: 3
      topic.creation.e2e.partitions: 2
      topic.creation.e2e.cleanup.policy: compact
      topic.creation.e2e.compression.type: producer
  debezium:
    spec:
      maxRestarts: 10
    config:
      topic.creation.groups: compacted, deleted, heartbeat, dev, e2e
      database.server.name: azure
      database.hostname: azure.postgres.database.azure.com
      database.sslmode: verify-full
      signal.enabled: true
      slot.max.retries: 120
      slot.retry.delay.ms: 30000
    instances:
      - name: '{{ $.Release.Name }}-debezium-foo'
        spec:
          state: stopped
        config:
          database.dbname: foo
          table.include.list: public.lo, public.li
          topic.creation.group: compacted
          topic.prefix: foo1
      - name: '{{ $.Release.Name }}-debezium-bar'
        spec:
          state: paused
        config:
          database.dbname: bar
          publication.name: '{{ $.Release.Name }}_debezium_xbar'
          publication.autocreate.mode: filtered
          table.include.list: public.la
          slot.name: '{{ $.Release.Name }}_debezium_xbar'
          topic.creation.group: dev
          topic.prefix: bar # has a lower priority
          namespace: xbar # has a higher priority
      - name: '{{ $.Release.Name }}-debezium-main'
        config:
          database.dbname: main
          column.exclude.list: public.user.email_address
          topic.creation.dev.include: public.address, public.phone, public.user
          topic.creation.dev_deleted.include: public.notifications
          namespace: main
      - name: '{{ $.Release.Name }}-debezium-events'
        config:
          database.dbname: events
          table.include.list: public.event, public.host
          replica.identity.autoset.values: public.event:FULL
          topic.creation.group: dev
          namespace: alpha
      - name: '{{ $.Release.Name }}-debezium-events-e2e'
        config:
          database.dbname: events_e2e
          ## ignored if `topic.creation.*.include` defined
          # table.include.list: public.resource, public.phone, public.permission
          # topic.creation.group: e2e
          ## has a higher priority than `table.include.list` and `topic.creation.group`
          topic.creation.compacted.include: public.event, public.host
          topic.creation.deleted.include: public.links, public.role
          namespace: e2e
      - name: '{{ $.Release.Name }}-debezium-permissions-e2e'
        config:
          database.dbname: permissions_e2e
          table.include.list: public.permission, public.role
          topic.creation.group: e2e
          namespace: e2e

externalConfig:
  rbac:
    enabled: true
    rules:
      - apiGroups: [""]
        resources: ["pods", "pods/status"]
        verbs: ["get", "list", "watch"]

  podMonitor:
    enabled: true
    extraLabels:
      app: prometheus-monitor
      release: monitor

  configMap:
    enabled: true
    content:
      psql-root.crt: |-
        -----BEGIN CERTIFICATE-----
        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
        RA+GsCyRxj3qrg+E
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsFADBh
        MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
        d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBH
        MjAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVT
        MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
        b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEcyMIIBIjANBgkqhkiG
        9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/RrohCgiN9RlUyfuI
        2/Ou8jqJkTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxpsMNzaHxmx
        1x7e/dfgy5SDN67sH0NO3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQ
        q2EGnI/yuum06ZIya7XzV+hdG82MHauVBJVJ8zUtluNJbd134/tJS7SsVQepj5Wz
        tCO7TG1F8PapspUwtP1MVYwnSlcUfIKdzXOS0xZKBgyMUNGPHgm+F6HmIcr9g+UQ
        vIOlCsRnKPZzFBQ9RnbDhxSJITRNrw9FDKZJobq7nMWxM4MphQIDAQABo0IwQDAP
        BgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUTiJUIBiV
        5uNu5g/6+rkS7QYXjzkwDQYJKoZIhvcNAQELBQADggEBAGBnKJRvDkhj6zHd6mcY
        1Yl9PMWLSn/pvtsrF9+wX3N3KjITOYFnQoQj8kVnNeyIv/iPsGEMNKSuIEyExtv4
        NeF22d+mQrvHRAiGfzZ0JFrabA0UWTW98kndth/Jsw1HKj2ZL7tcu7XUIOGZX1NG
        Fdtom/DzMNU+MeKNhJ7jitralj41E6Vf8PlwUHBHQRFXGU7Aj64GxJUTFy8bJZ91
        8rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTqh5Uykw7+U0b6LJ3/iyK5S9kJRaTe
        pLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyNxF1WW6LZZm6zNTfl
        MrY=
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh
        MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
        d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD
        QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT
        MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
        b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG
        9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB
        CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97
        nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt
        43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P
        T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4
        gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO
        BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR
        TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw
        DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr
        hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg
        06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF
        PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls
        YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk
        CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=
        -----END CERTIFICATE-----

  debeziumConfig:
    secretName: '{{ .Release.Name }}-pg-config-credentials'
    initJob:
      enabled: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: 'kubernetes.azure.com/mode'
                    operator: NotIn
                    values:
                      - system

  extraManifests:
    - apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      metadata:
        name: '{{ tpl .Values.externalConfig.debeziumConfig.secretName $ }}-eso'
      spec:
        refreshInterval: 5m
        secretStoreRef:
          kind: ClusterSecretStore
          name: default
        target:
          creationPolicy: Owner
          name: '{{ tpl .Values.externalConfig.debeziumConfig.secretName $ }}'
          template:
            type: Opaque
        data:
          - secretKey: '{{ tpl .Values.externalConfig.debeziumConfig.postgresUsernameKey $ }}'
            remoteRef:
              key: psql-name
          - secretKey: '{{ tpl .Values.externalConfig.debeziumConfig.postgresPasswordKey $ }}'
            remoteRef:
              key: psql-password
